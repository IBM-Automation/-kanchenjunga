
- name: Create a GCP instance
  hosts: localhost
  vars:
     gcp_project: applied-honor-362616
     gcp_cred_kind: serviceaccount
     gcp_zone: us-central1-a
     gcp_region: us-central1
     instance_name: gcp-ansible-debian-postgres
     machine_type: e2-micro
     disk_size_gb: 20
     ip_cidr_range: 172.16.0.0/28
     gcp_ssh_key: GMX+0011ZU744@DESKTOP-O3ULEOT:ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDtvvEAW5h4HU0cU3GjNvN4EC3LDT1YO+wScswSXXq962yB5W9AB1JjVd7wmj4O688xczxR28wgUM3eKOqi3O1j3tWxZOfKFwpLmH6t7pGfoPbnJUN1BcSIDEdaJgpcZwRbmn5SEsf/LmBXYjITavjCcrR7uASfCkkxgzdTZCpwaO0LyWJnkq9bbN9boEWOZBOdW9GybCk/O0Y5gZEaSun2Mcg7GblA7My8UwbatuOBKw9SNd3pVsBM2ZtrlAWxXNwyX5Cb8pGfWvEcO8fgwIgFtZ+lgcMGe0iqr8Q7LT+uccxxhJIAl2Hyeao6Rzp3xtVolsHmqOzdsQrslypTdtHnJ/gK/wmmBP5Twav8sCj3bBIwe3XptO7/sUlfhIfQ9sDUl8v7ASy1nN3KCem30oQIPUFTlEHd8jGGRXGnERwiKDAl6TZmHDa3RLVHGdJA6MdnnisYTPg8QpFCx9u+y6x1BMVlXVuHNCW3BLJHsSv+pDfBGSp/VhpDX4MiVvktmUM= GMX+0011ZU744@DESKTOP-O3ULEOT

  tasks:
    - name: Create VPC Network
      gcp_compute_network:
        name: gcp-ansible-network
        auto_create_subnetworks: yes
        project: "{{ gcp_project }}"
        auth_kind: "{{ gcp_cred_kind }}"
        state: present
      register: network

    - name: Create subnet within above VPC network
      gcp_compute_subnetwork:
        name: gcp-ansible-subnet
        region: "{{ gcp_region }}"
        network: "{{ network }}"
        ip_cidr_range: "{{ ip_cidr_range }}"
        project: "{{ gcp_project }}"
        auth_kind: "{{ gcp_cred_kind }}"
        state: present
      register: subnet

    - name: Create firewall rule to allow port 80 and 22 for all source IPs
      gcp_compute_firewall:
        name: gcp-ansible-firewall
        network: "{{ network }}"
        allowed:
        - ip_protocol: tcp
          ports: ['80','22']
        target_tags:
          - gcp-ansible
        source_ranges: ['0.0.0.0/0']
        project: "{{ gcp_project }}"
        auth_kind: "{{ gcp_cred_kind }}"
        state: present
      register: firewall

    - name: Create IP address for instance name
      gcp_compute_address:
        name: "{{ instance_name }}"
        region: "{{ gcp_region }}"
        project: "{{ gcp_project }}"
        auth_kind: "{{ gcp_cred_kind }}"
        state: present
      register: address
      
    - debug: var=address.address

    - name: Create disk for new instance
      gcp_compute_disk:
        name: "{{ instance_name }}"
        size_gb: "{{ disk_size_gb }}"
        #source_image: 'projects/centos-cloud/global/images/centos-7-v20190116'
        source_image: 'projects/debian-cloud/global/images/debian-10-buster-v20220118'
        zone: "{{ gcp_zone }}"
        project: "{{ gcp_project }}"
        auth_kind: "{{ gcp_cred_kind }}"
        state: present
      register: disk

    - name: Create new instance
      gcp_compute_instance:
        state: present
        name: "{{ instance_name }}"
        machine_type: "{{ machine_type }}"
        disks:
        - auto_delete: true
          boot: true
          source: "{{ disk }}"
        network_interfaces:
        - network: "{{ network }}"
          subnetwork: "{{ subnet }}"
          access_configs:
          - name: External NAT
            nat_ip: "{{ address }}"
            type: ONE_TO_ONE_NAT
        zone: "{{ gcp_zone }}"
        tags:
          items:
           - gcp-ansible
        metadata:
          #ssh-keys: "vsprc:ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCwp9R/jD1Zk/aigAW4mh1c0pIUPXr/vNHQww/yaD459QL9/M/MyJfruNAlPkSm08UUZtBUDsfrQ4hHxQ3hriDwBMcVuqk6U6ktXuA3yIsyFMAZeZMJYXmnnfD+Wby3As3ENSNolBN7+60li8GczvOpRW5l+HE4OBT/7qMMBtcSCApECwpnD5Zl7xXP6EzCqtvN/NJRVcRucDMMqtSfzqTaUnycG6+7S3GndtnMlwCtc4Mla/iYQk8IebIz1fOGcpgutL2mKKqj8zsy2gLc5rRCRUCR7iLcbDFZL2ZYqK06u9khs0MoHdRk6sgwjGVLrbqRSowdgm3uqe6e3n4F8Pth vsprc"   
          ssh-keys: "{{ gcp_ssh_key }}"   
          #value: "vsprc:{{ gcp_ssh_key }}"   
        project: "{{ gcp_project }}"
        auth_kind: "{{ gcp_cred_kind }}"
      register: instance

    - debug:
        var: instance
    
    - name: Exchange the token for a Bearer Token
      uri:
        url: https://aap-controller-ansible-automation-platform.eca-5d3b077647f2e82a12132e1e840f7b71-0000.eu-de.containers.appdomain.cloud/api/v2/inventories/18/hosts/
        body_format: json
        # user: null
        # password: Basic YWRtaW46cGFzc3dvcmQ=
        method: POST
        body: 
          enabled: true
          name: "{{ address.address }}"
        headers:
          content_type: application/json
          Authorization: "Basic YWRtaW46cGFzc3dvcmQ="
        status_code: 201
      register: scalingo_response_bearer_token

      
    - debug: var=scalingo_response_bearer_token
   
  

